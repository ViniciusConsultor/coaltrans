//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusFacade
{
    using System;
    using System.Data;
    using System.Xml;
    using System.Reflection;
    using System.Data.SqlClient;
    using DataLogic;
    using BusEntity;
    
    
    public class MeiTanBusFacade
    {
        
        public MeiTanBusFacade()
        {
        }
        
        // 根据主键ID返回指定的MeiTan实体
        public static MeiTanBusEntity GetEntity(int ID)
        {
            MeiTanByPK exec = new MeiTanByPK();
            exec.ID = ID;
            MeiTanBusEntity obj = new MeiTanBusEntity();
            obj.MetaDataTable = exec.ExecDataTable();
            return obj;
        }
        
        // 返回所有MeiTan
        public static DataTable GetList()
        {
            MeiTanByAll exec = new MeiTanByAll();
            return exec.ExecDataTable();
        }
        // 返回所有UserID下的MeiTan
        public static DataTable GetList(int userid)
        {
            MeiTanByUserID exec = new MeiTanByUserID();
            exec.Userid = userid;
            return exec.ExecDataTable();
        }
        #region 根据存储过程MeiTanBySearch查询结果
        /// <summary>
        /// 根据存储过程MeiTanBySearch查询结果
        /// </summary>
        /// <param name="whereString">whereString</param>
        /// <param name="pageIndex">pageIndex</param>
        /// <param name="pageSize">pageSize</param>
        /// <param name="recordCount">recordCount</param>
        /// <param name="pageCount">pageCount</param>
        /// <returns>DataTable</returns>
        public static DataTable GetList(string whereString, int pageIndex, int pageSize, out int recordCount, out int pageCount)
        {
            MeiTanBySearch exec = new MeiTanBySearch();
            exec.WhereString = whereString;
            exec.PageIndex = pageIndex;
            exec.PageSize = pageSize;

            DataTable dt = exec.ExecDataTable();
            recordCount = exec.RecordCount;
            pageCount = exec.PageCount;
            return dt;
        }
        #endregion




    }
}
